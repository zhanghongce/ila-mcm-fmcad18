
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightBARrightIMPLYleftANDORleftNOTleftEQNEQLTLEGTGEleftADDSUBleftMULID DOT COMMA BAR LEFTPARA RIGHTPARA AND OR NOT NEQSTATIC IMPLY EQ NEQ LT GT GE LE ADD SUB MUL LEFTFUNC RIGHTFUNC FUNCASSIGN COLON WC MC EXISTS RC FORALL IC AXIOM DEFINEtop : axiomList functionsfunctions : funcs funcs : func funcs\n        | emptyempty :func : DEFINE ID LEFTFUNC paramlist RIGHTFUNC FUNCASSIGN expr\n        | DEFINE ID LEFTPARA paramlist RIGHTPARA FUNCASSIGN expraxiomList : axiomList axiom \n        | axiomaxiom : AXIOM ID expr expr : FORALL ID COLON typelist BAR expr\n        | FORALL ID COLON typelist restriction BAR expr expr : EXISTS ID COLON typelist BAR expr\n        | EXISTS ID COLON typelist restriction BAR expr  expr : LEFTPARA expr RIGHTPARA  expr : expr AND exprexpr : expr OR exprexpr : expr IMPLY exprexpr : NOT exprexpr : plainDescriptionplainDescription : compRel\n        | compRel EQ compRel \n        | compRel NEQ compRel\n        | compRel LT compRel\n        | compRel GT compRel\n        | compRel LE compRel\n        | compRel GE compRel\n        | ID LEFTFUNC paramlist RIGHTFUNCcompRel : compRel MUL compRel\n        | compRel ADD compRel\n        | compRel SUB compRel\n        | iddot\n        paramlist : compRel \n        | compRel COMMA paramlistiddot : ID \n        | ID DOT iddotrestriction : LEFTPARA reslist RIGHTPARAreslist : res \n        | res COMMA reslistres : IDres : NEQSTATIC ID res : NOT IDtypelist : type \n        | LEFTPARA tps RIGHTPARAtps : type \n        | type COMMA tpstype : ID\n        | WC\n        | RC\n        | IC\n        | MC '
    
_lr_action_items = {'WC':([57,58,69,97,],[74,74,74,74,]),'SUB':([14,17,19,43,44,47,48,49,50,51,52,53,54,55,60,],[30,-32,-35,30,-35,30,-30,30,30,30,-31,-29,30,30,-36,]),'LEFTPARA':([11,13,15,22,39,40,41,57,58,67,68,70,71,72,73,74,75,78,79,81,86,89,96,98,],[15,23,15,15,15,15,15,69,69,-51,82,-49,-50,-43,-47,-48,82,15,15,15,15,15,-44,15,]),'MUL':([14,17,19,43,44,47,48,49,50,51,52,53,54,55,60,],[31,-32,-35,31,-35,31,31,31,31,31,31,-29,31,31,-36,]),'AXIOM':([0,1,3,8,14,17,19,20,21,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,90,99,100,106,],[4,4,-9,-8,-21,-32,-35,-10,-20,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,-18,-28,-11,-13,-12,-14,]),'DOT':([19,44,],[38,38,]),'NEQ':([14,17,19,44,48,52,53,60,],[33,-32,-35,-35,-30,-31,-29,-36,]),'LE':([14,17,19,44,48,52,53,60,],[25,-32,-35,-35,-30,-31,-29,-36,]),'LT':([14,17,19,44,48,52,53,60,],[28,-32,-35,-35,-30,-31,-29,-36,]),'COMMA':([17,43,44,48,52,53,60,67,70,71,73,74,84,91,95,102,103,],[-32,64,-35,-30,-31,-29,-36,-51,-49,-50,-47,-48,97,101,-40,-41,-42,]),'RIGHTFUNC':([17,43,44,46,48,52,53,59,60,77,],[-32,-33,-35,66,-30,-31,-29,76,-36,-34,]),'RC':([57,58,69,97,],[70,70,70,70,]),'FORALL':([11,15,22,39,40,41,78,79,81,86,89,98,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'COLON':([35,36,],[57,58,]),'$end':([1,2,3,5,6,7,8,9,12,14,17,19,20,21,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,87,88,90,99,100,106,],[-5,0,-9,-2,-1,-5,-8,-4,-3,-21,-32,-35,-10,-20,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,-18,-28,-7,-6,-11,-13,-12,-14,]),'GT':([14,17,19,44,48,52,53,60,],[29,-32,-35,-35,-30,-31,-29,-36,]),'EXISTS':([11,15,22,39,40,41,78,79,81,86,89,98,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'BAR':([67,68,70,71,72,73,74,75,80,85,96,104,],[-51,81,-49,-50,-43,-47,-48,86,89,98,-44,-37,]),'NEQSTATIC':([82,101,],[92,92,]),'LEFTFUNC':([13,19,],[24,37,]),'ADD':([14,17,19,43,44,47,48,49,50,51,52,53,54,55,60,],[26,-32,-35,26,-35,26,-30,26,26,26,-31,-29,26,26,-36,]),'IC':([57,58,69,97,],[71,71,71,71,]),'EQ':([14,17,19,44,48,52,53,60,],[32,-32,-35,-35,-30,-31,-29,-36,]),'ID':([4,10,11,15,16,18,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,57,58,64,69,78,79,81,82,86,89,92,93,97,98,101,],[11,13,19,19,35,36,19,44,44,44,44,44,44,44,44,44,44,44,44,44,19,19,19,73,73,44,73,19,19,19,95,19,19,102,103,73,19,95,]),'FUNCASSIGN':([65,66,],[78,79,]),'AND':([14,17,19,20,21,34,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,87,88,90,99,100,106,],[-21,-32,-35,39,-20,39,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,39,-28,39,39,39,39,39,39,]),'MC':([57,58,69,97,],[67,67,67,67,]),'GE':([14,17,19,44,48,52,53,60,],[27,-32,-35,-35,-30,-31,-29,-36,]),'OR':([14,17,19,20,21,34,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,87,88,90,99,100,106,],[-21,-32,-35,40,-20,40,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,40,-28,40,40,40,40,40,40,]),'IMPLY':([14,17,19,20,21,34,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,87,88,90,99,100,106,],[-21,-32,-35,41,-20,41,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,41,-28,41,41,41,41,41,41,]),'NOT':([11,15,22,39,40,41,78,79,81,82,86,89,98,101,],[22,22,22,22,22,22,22,22,22,93,22,22,22,93,]),'DEFINE':([1,3,7,8,14,17,19,20,21,42,44,47,48,49,50,51,52,53,54,55,56,60,61,62,63,76,87,88,90,99,100,106,],[10,-9,10,-8,-21,-32,-35,-10,-20,-19,-35,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,-18,-28,-7,-6,-11,-13,-12,-14,]),'RIGHTPARA':([14,17,19,21,34,42,43,44,45,47,48,49,50,51,52,53,54,55,56,60,61,62,63,67,70,71,73,74,76,77,83,84,90,91,94,95,99,100,102,103,105,106,107,],[-21,-32,-35,-20,56,-19,-33,-35,65,-26,-30,-27,-24,-25,-31,-29,-22,-23,-15,-36,-16,-17,-18,-51,-49,-50,-47,-48,-28,-34,96,-45,-11,-38,104,-40,-13,-12,-41,-42,-46,-14,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'funcs':([1,7,],[5,12,]),'restriction':([68,75,],[80,85,]),'functions':([1,],[6,]),'type':([57,58,69,97,],[72,72,84,84,]),'compRel':([11,15,22,23,24,25,26,27,28,29,30,31,32,33,37,39,40,41,64,78,79,81,86,89,98,],[14,14,14,43,43,47,48,49,50,51,52,53,54,55,43,14,14,14,43,14,14,14,14,14,14,]),'reslist':([82,101,],[94,107,]),'typelist':([57,58,],[68,75,]),'axiomList':([0,],[1,]),'top':([0,],[2,]),'res':([82,101,],[91,91,]),'iddot':([11,15,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,64,78,79,81,86,89,98,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,60,17,17,17,17,17,17,17,17,17,17,]),'tps':([69,97,],[83,105,]),'func':([1,7,],[7,7,]),'expr':([11,15,22,39,40,41,78,79,81,86,89,98,],[20,34,42,61,62,63,87,88,90,99,100,106,]),'plainDescription':([11,15,22,39,40,41,78,79,81,86,89,98,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'paramlist':([23,24,37,64,],[45,46,59,77,]),'axiom':([0,1,],[3,8,]),'empty':([1,7,],[9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> axiomList functions','top',2,'p_top','axiomParse.py',38),
  ('functions -> funcs','functions',1,'p_functions','axiomParse.py',42),
  ('funcs -> func funcs','funcs',2,'p_funcs','axiomParse.py',46),
  ('funcs -> empty','funcs',1,'p_funcs','axiomParse.py',47),
  ('empty -> <empty>','empty',0,'p_empty','axiomParse.py',50),
  ('func -> DEFINE ID LEFTFUNC paramlist RIGHTFUNC FUNCASSIGN expr','func',7,'p_function','axiomParse.py',54),
  ('func -> DEFINE ID LEFTPARA paramlist RIGHTPARA FUNCASSIGN expr','func',7,'p_function','axiomParse.py',55),
  ('axiomList -> axiomList axiom','axiomList',2,'p_axioms','axiomParse.py',59),
  ('axiomList -> axiom','axiomList',1,'p_axioms','axiomParse.py',60),
  ('axiom -> AXIOM ID expr','axiom',3,'p_axiom','axiomParse.py',67),
  ('expr -> FORALL ID COLON typelist BAR expr','expr',6,'p_quanexpr_forall','axiomParse.py',76),
  ('expr -> FORALL ID COLON typelist restriction BAR expr','expr',7,'p_quanexpr_forall','axiomParse.py',77),
  ('expr -> EXISTS ID COLON typelist BAR expr','expr',6,'p_quanexpr_exists','axiomParse.py',103),
  ('expr -> EXISTS ID COLON typelist restriction BAR expr','expr',7,'p_quanexpr_exists','axiomParse.py',104),
  ('expr -> LEFTPARA expr RIGHTPARA','expr',3,'p_quanexpr_parath','axiomParse.py',134),
  ('expr -> expr AND expr','expr',3,'p_quanexpr_logic_and','axiomParse.py',139),
  ('expr -> expr OR expr','expr',3,'p_quanexpr_logic_or','axiomParse.py',143),
  ('expr -> expr IMPLY expr','expr',3,'p_quanexpr_logic_imply','axiomParse.py',147),
  ('expr -> NOT expr','expr',2,'p_quanexpr_logic_not','axiomParse.py',151),
  ('expr -> plainDescription','expr',1,'p_quanexpr_plain','axiomParse.py',156),
  ('plainDescription -> compRel','plainDescription',1,'p_plainDescript','axiomParse.py',161),
  ('plainDescription -> compRel EQ compRel','plainDescription',3,'p_plainDescript','axiomParse.py',162),
  ('plainDescription -> compRel NEQ compRel','plainDescription',3,'p_plainDescript','axiomParse.py',163),
  ('plainDescription -> compRel LT compRel','plainDescription',3,'p_plainDescript','axiomParse.py',164),
  ('plainDescription -> compRel GT compRel','plainDescription',3,'p_plainDescript','axiomParse.py',165),
  ('plainDescription -> compRel LE compRel','plainDescription',3,'p_plainDescript','axiomParse.py',166),
  ('plainDescription -> compRel GE compRel','plainDescription',3,'p_plainDescript','axiomParse.py',167),
  ('plainDescription -> ID LEFTFUNC paramlist RIGHTFUNC','plainDescription',4,'p_plainDescript','axiomParse.py',168),
  ('compRel -> compRel MUL compRel','compRel',3,'p_compResult','axiomParse.py',177),
  ('compRel -> compRel ADD compRel','compRel',3,'p_compResult','axiomParse.py',178),
  ('compRel -> compRel SUB compRel','compRel',3,'p_compResult','axiomParse.py',179),
  ('compRel -> iddot','compRel',1,'p_compResult','axiomParse.py',180),
  ('paramlist -> compRel','paramlist',1,'p_paramlist','axiomParse.py',189),
  ('paramlist -> compRel COMMA paramlist','paramlist',3,'p_paramlist','axiomParse.py',190),
  ('iddot -> ID','iddot',1,'p_iddot','axiomParse.py',198),
  ('iddot -> ID DOT iddot','iddot',3,'p_iddot','axiomParse.py',199),
  ('restriction -> LEFTPARA reslist RIGHTPARA','restriction',3,'p_restriction','axiomParse.py',207),
  ('reslist -> res','reslist',1,'p_reslist','axiomParse.py',228),
  ('reslist -> res COMMA reslist','reslist',3,'p_reslist','axiomParse.py',229),
  ('res -> ID','res',1,'p_res_ID','axiomParse.py',239),
  ('res -> NEQSTATIC ID','res',2,'p_res_NEQSTATIC','axiomParse.py',243),
  ('res -> NOT ID','res',2,'p_res_NOT_ID','axiomParse.py',247),
  ('typelist -> type','typelist',1,'p_typelist','axiomParse.py',252),
  ('typelist -> LEFTPARA tps RIGHTPARA','typelist',3,'p_typelist','axiomParse.py',253),
  ('tps -> type','tps',1,'p_tps','axiomParse.py',262),
  ('tps -> type COMMA tps','tps',3,'p_tps','axiomParse.py',263),
  ('type -> ID','type',1,'p_type','axiomParse.py',271),
  ('type -> WC','type',1,'p_type','axiomParse.py',272),
  ('type -> RC','type',1,'p_type','axiomParse.py',273),
  ('type -> IC','type',1,'p_type','axiomParse.py',274),
  ('type -> MC','type',1,'p_type','axiomParse.py',275),
]
